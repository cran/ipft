// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ipfLGD
NumericMatrix ipfLGD(NumericMatrix train, NumericMatrix test, double sd, double epsilon);
RcppExport SEXP ipft_ipfLGD(SEXP trainSEXP, SEXP testSEXP, SEXP sdSEXP, SEXP epsilonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type train(trainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test(testSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    rcpp_result_gen = Rcpp::wrap(ipfLGD(train, test, sd, epsilon));
    return rcpp_result_gen;
END_RCPP
}
// ipfPLGD
NumericMatrix ipfPLGD(NumericMatrix train, NumericMatrix test, double sd, double epsilon, double alpha, double threshold);
RcppExport SEXP ipft_ipfPLGD(SEXP trainSEXP, SEXP testSEXP, SEXP sdSEXP, SEXP epsilonSEXP, SEXP alphaSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type train(trainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test(testSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(ipfPLGD(train, test, sd, epsilon, alpha, threshold));
    return rcpp_result_gen;
END_RCPP
}
// ipfEuclidean
NumericMatrix ipfEuclidean(NumericMatrix train, NumericMatrix test);
RcppExport SEXP ipft_ipfEuclidean(SEXP trainSEXP, SEXP testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type train(trainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test(testSEXP);
    rcpp_result_gen = Rcpp::wrap(ipfEuclidean(train, test));
    return rcpp_result_gen;
END_RCPP
}
// ipfManhattan
NumericMatrix ipfManhattan(NumericMatrix train, NumericMatrix test);
RcppExport SEXP ipft_ipfManhattan(SEXP trainSEXP, SEXP testSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type train(trainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test(testSEXP);
    rcpp_result_gen = Rcpp::wrap(ipfManhattan(train, test));
    return rcpp_result_gen;
END_RCPP
}
// ipfNormDistance
NumericMatrix ipfNormDistance(NumericMatrix train, NumericMatrix test, double normVal);
RcppExport SEXP ipft_ipfNormDistance(SEXP trainSEXP, SEXP testSEXP, SEXP normValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type train(trainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test(testSEXP);
    Rcpp::traits::input_parameter< double >::type normVal(normValSEXP);
    rcpp_result_gen = Rcpp::wrap(ipfNormDistance(train, test, normVal));
    return rcpp_result_gen;
END_RCPP
}
